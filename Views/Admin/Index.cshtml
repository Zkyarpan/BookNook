@model IEnumerable<BookNook.Models.ApplicationUser>
@using Microsoft.AspNetCore.Identity
@inject UserManager<BookNook.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="flex flex-col md:flex-row min-h-screen bg-gray-50">
    <!-- Sidebar -->
    <aside class="w-full md:w-1/4 lg:w-1/5 bg-white shadow-lg p-6">
        <h2 class="text-xl font-merriweather text-[#4b2e83] mb-6">Admin Menu</h2>
        <nav class="space-y-2">
            <a asp-action="Index" class="block px-4 py-2 rounded hover:bg-[#4b2e83] hover:text-white transition">Dashboard</a>
            <a asp-controller="Books" asp-action="Index" class="block px-4 py-2 rounded hover:bg-[#4b2e83] hover:text-white transition">Manage Books</a>
            <a asp-controller="Announcements" asp-action="Index" class="block px-4 py-2 rounded hover:bg-[#4b2e83] hover:text-white transition">Announcements</a>
            <a asp-controller="Staff" asp-action="FulfillOrder" class="block px-4 py-2 rounded hover:bg-[#4b2e83] hover:text-white transition">Orders</a>
        </nav>
    </aside>

    <!-- Main content -->
    <main class="flex-1 p-6">
        <h1 class="text-2xl font-merriweather text-[#4b2e83] mb-6">Admin Dashboard</h1>

        @* Flash messages *@
        @if (TempData["SuccessMessage"] is string success)
        {
            <div class="bg-green-100 text-green-800 p-3 rounded mb-4 shadow">@success</div>
        }
        @if (TempData["ErrorMessage"] is string error)
        {
            <div class="bg-red-100 text-red-800 p-3 rounded mb-4 shadow">@error</div>
        }

        <!-- Metrics cards -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
            @{
                var users = Model.ToList();
                var total = users.Count;
                var admins = users.Count(u => (UserManager.GetRolesAsync(u).Result).Contains("Admin"));
                var staff = users.Count(u => (UserManager.GetRolesAsync(u).Result).Contains("Staff"));
                var members = total - admins - staff;
            }
            <div class="bg-white p-4 rounded-lg shadow">
                <p class="text-sm text-gray-500">Total Users</p>
                <p class="text-2xl font-bold text-[#4b2e83]">@total</p>
            </div>
            <div class="bg-white p-4 rounded-lg shadow">
                <p class="text-sm text-gray-500">Admins</p>
                <p class="text-2xl font-bold text-[#4b2e83]">@admins</p>
            </div>
            <div class="bg-white p-4 rounded-lg shadow">
                <p class="text-sm text-gray-500">Staff</p>
                <p class="text-2xl font-bold text-[#4b2e83]">@staff</p>
            </div>
            <div class="bg-white p-4 rounded-lg shadow">
                <p class="text-sm text-gray-500">Members</p>
                <p class="text-2xl font-bold text-[#4b2e83]">@members</p>
            </div>
        </div>

        <!-- Filters -->
        <div class="flex flex-wrap gap-2 mb-4">
            <button class="filter-button active px-4 py-1 rounded bg-[#4b2e83] text-white" data-role="all">All</button>
            <button class="filter-button px-4 py-1 rounded bg-gray-200 hover:bg-[#4b2e83] hover:text-white" data-role="Admin">Admins</button>
            <button class="filter-button px-4 py-1 rounded bg-gray-200 hover:bg-[#4b2e83] hover:text-white" data-role="Staff">Staff</button>
            <button class="filter-button px-4 py-1 rounded bg-gray-200 hover:bg-[#4b2e83] hover:text-white" data-role="Member">Members</button>
        </div>

        <!-- User table -->
        <div class="overflow-x-auto bg-white rounded-lg shadow">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-100">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-600 uppercase">User</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-600 uppercase">Email</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-600 uppercase">Roles</th>
                        <th class="px-6 py-3"></th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200">
                    @foreach (var user in users)
                    {
                        var roles = UserManager.GetRolesAsync(user).Result;
                        var roleList = roles.Any() ? string.Join(", ", roles) : "Member";
                        <tr data-roles="@string.Join(" ", roles.DefaultIfEmpty("Member"))">
                            <td class="px-6 py-4 flex items-center space-x-3">
                                @if (!string.IsNullOrEmpty(user.ProfileImageUrl))
                                {
                                    <img src="@user.ProfileImageUrl" class="h-8 w-8 rounded-full" />
                                }
                                else
                                {
                                    <div class="h-8 w-8 bg-gray-300 rounded-full flex items-center justify-center text-gray-600">?</div>
                                }
                                <span class="text-sm font-medium text-gray-800">@user.UserName</span>
                            </td>
                            <td class="px-6 py-4 text-sm text-gray-600">@user.Email</td>
                            <td class="px-6 py-4 text-sm text-gray-600">@roleList</td>
                            <td class="px-6 py-4 text-right space-x-2">
                                <a asp-action="ViewProfile" asp-route-id="@user.Id"
                                   class="text-xs bg-[#4b2e83] text-white px-2 py-1 rounded hover:bg-[#3c226a]">View</a>
                                <a asp-action="SendDeletionNotice" asp-route-id="@user.Id"
                                   class="text-xs bg-red-600 text-white px-2 py-1 rounded hover:bg-red-700">Notice</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </main>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.filter-button').forEach(btn => {
            btn.addEventListener('click', () => {
                // Active state
                document.querySelectorAll('.filter-button').forEach(b => {
                    b.classList.remove('bg-[#4b2e83]', 'text-white');
                    b.classList.add('bg-gray-200');
                });
                btn.classList.add('bg-[#4b2e83]', 'text-white');

                // Filter rows
                const role = btn.getAttribute('data-role');
                document.querySelectorAll('tbody tr').forEach(row => {
                    const roles = row.getAttribute('data-roles').split(' ');
                    row.style.display = (role === 'all' || roles.includes(role)) ? '' : 'none';
                });
            });
        });
    </script>
}
