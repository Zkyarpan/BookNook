@model IEnumerable<BookNook.Models.Order>

@{
    ViewData["Title"] = "My Orders";
}

<div class="container mx-auto max-w-7xl px-6 py-8">
    <h2 class="text-3xl font-bold text-amber-900 text-center mb-8">My Orders</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="max-w-md mx-auto mb-6 bg-green-100 text-green-700 p-4 rounded-lg text-center">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="max-w-md mx-auto mb-6 bg-red-100 text-red-700 p-4 rounded-lg text-center">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (!Model.Any())
    {
        <p class="text-center text-gray-600">You have no orders.</p>
    }
    else
    {
        <!-- Tabs -->
        <div class="flex justify-center space-x-4 mb-6">
            <button id="tab-Placed" class="px-4 py-2 bg-amber-100 text-amber-800 rounded-t-lg font-medium" onclick="showTab('Placed')">Placed</button>
            <button id="tab-Received" class="px-4 py-2 bg-amber-100 text-amber-800 rounded-t-lg font-medium" onclick="showTab('Received')">Received</button>
            <button id="tab-Cancelled" class="px-4 py-2 bg-amber-100 text-amber-800 rounded-t-lg font-medium" onclick="showTab('Cancelled')">Cancelled</button>
        </div>

        <form id="ordersForm" method="post" class="max-w-4xl mx-auto">
            <div class="bg-amber-50 rounded-b-lg shadow-lg p-6">
                <div class="flex items-center justify-between mb-6">
                    <label class="inline-flex items-center">
                        <input type="checkbox" id="selectAll" class="form-checkbox h-5 w-5 text-amber-600" onchange="toggleSelectAll(this)" />
                        <span class="ml-2 text-gray-700 font-medium">Select All</span>
                    </label>
                    <button id="actionBtn"
                            type="submit"
                            class="bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded shadow disabled:opacity-50"
                            disabled>
                        Cancel Selected
                    </button>
                </div>

                <div class="space-y-4">
                    @foreach (var order in Model)
                    {
                        var status = order.IsCancelled
                        ? "Cancelled"
                        : order.Status;
                        var disabled = order.IsCancelled || order.Status == "Received" || !order.IsCancellable;
                        <div data-status="@status"
                             class="order-card flex items-start bg-white rounded-lg shadow transition hover:shadow-lg p-4 space-x-4">
                            <label class="flex-shrink-0">
                                <input type="checkbox"
                                       name="selectedOrders"
                                       value="@order.UserId|@order.BookId|@order.OrderDate:o"
                                       class="order-checkbox form-checkbox h-5 w-5 text-amber-600"
                                @(disabled ? "disabled" : "") />
                            </label>

                            <div class="flex-shrink-0 w-20 h-20 bg-gray-100 rounded overflow-hidden">
                                @if (!string.IsNullOrEmpty(order.Book.CoverImageUrl))
                                {
                                    <img src="@order.Book.CoverImageUrl"
                                         alt="@order.Book.Title"
                                         class="w-full h-full object-cover" />
                                }
                                else
                                {
                                    <div class="w-full h-full flex items-center justify-center text-gray-400 text-xs">
                                        No Image
                                    </div>
                                }
                            </div>

                            <div class="flex-1">
                                <h3 class="text-lg font-semibold text-amber-900">@order.Book.Title</h3>
                                <p class="text-sm text-gray-600 mb-1">by @order.Book.Author</p>
                                <p class="text-sm text-gray-600 mb-1">Ordered: @order.OrderDate.ToString("d MMM yyyy HH:mm")</p>
                                <p class="text-sm text-gray-600 mb-1">Quantity: @order.Quantity</p>
                                <p class="text-sm text-gray-600 mb-1">Total: $@order.TotalPrice</p>
                                <p class="text-sm text-gray-600 mb-1">Claim Code: <span class="font-medium">@order.ClaimCode</span></p>
                                <p class="text-sm">
                                    Status:
                                    @if (order.IsCancelled)
                                    {
                                        <span class="text-red-600 font-semibold">Cancelled</span>
                                        <span class="text-gray-500">on @order.CancelledAt?.ToString("d MMM yyyy")</span>
                                    }
                                    else if (order.IsFulfilled)
                                    {
                                        <span class="text-green-600 font-semibold">Received</span>
                                        <span class="text-gray-500">on @order.FulfilledAt?.ToString("d MMM yyyy")</span>
                                    }
                                    else
                                    {
                                        <span class="text-amber-800 font-semibold">@order.Status</span>
                                    }
                                </p>
                            </div>

                            <div class="flex-shrink-0">
                                @if (order.IsCancelled || order.Status == "Received")
                                {
                                    <!-- Delete button -->
                                    <form asp-action="DeleteOrder" method="post">
                                        <input type="hidden" name="userId" value="@order.UserId" />
                                        <input type="hidden" name="bookId" value="@order.BookId" />
                                        <input type="hidden" name="orderDate" value="@order.OrderDate:o" />
                                        <button type="submit"
                                                class="bg-red-600 hover:bg-red-700 text-white text-xs px-3 py-1 rounded">
                                            Delete
                                        </button>
                                    </form>
                                }
                                else
                                {
                                    <!-- Cancel button -->
                                    <form asp-action="CancelOrder" method="post">
                                        <input type="hidden" name="userId" value="@order.UserId" />
                                        <input type="hidden" name="bookId" value="@order.BookId" />
                                        <input type="hidden" name="orderDate" value="@order.OrderDate:o" />
                                        <button type="submit"
                                                class="bg-red-600 hover:bg-red-700 text-white text-xs px-3 py-1 rounded"
                                        @(disabled ? "disabled opacity-50 cursor-not-allowed" : "")>
                                            Cancel
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </form>
    }

</div>

@section Scripts {
    <script>
        // show only orders matching the given status
        function showTab(status) {
          document.querySelectorAll('.order-card').forEach(card => {
            card.style.display = (card.getAttribute('data-status') === status)
                                  ? 'flex'
                                  : 'none';
          });

          // update tab styles
          ['Placed','Received','Cancelled'].forEach(s => {
            const btn = document.getElementById(`tab-${s}`);
            btn.classList.toggle('bg-white', s === status);
            btn.classList.toggle('border-b-0', s === status);
          });

          // set form action and button text
          const form   = document.getElementById('ordersForm');
          const actionBtn = document.getElementById('actionBtn');
          if (status === 'Placed') {
            form.action = '@Url.Action("CancelOrders", "Cart")';
            actionBtn.textContent = 'Cancel Selected';
          } else {
            form.action = '@Url.Action("DeleteOrders", "Cart")';
            actionBtn.textContent = 'Delete Selected';
          }

          // reset selects
          document.getElementById('selectAll').checked = false;
          toggleSelectAll(false);
        }

        // toggle all visible checkboxes
        function toggleSelectAll(checkboxOrFalse) {
          const checkAll = (checkboxOrFalse === true) || document.getElementById('selectAll').checked;
          let anyChecked = false;
          document.querySelectorAll('.order-card:visible .order-checkbox:not([disabled])').forEach(cb => {
            cb.checked = checkAll;
            if (cb.checked) anyChecked = true;
          });
          document.getElementById('actionBtn').disabled = !anyChecked;
        }

        // watch individual checkboxes
        document.addEventListener('change', e => {
          if (!e.target.classList.contains('order-checkbox')) return;
          const all  = Array.from(document.querySelectorAll('.order-card:visible .order-checkbox:not([disabled])'));
          const checked = all.filter(cb => cb.checked).length;
          document.getElementById('selectAll').checked = (checked === all.length);
          document.getElementById('actionBtn').disabled = (checked === 0);
        });

        // on load, show "Placed"
        document.addEventListener('DOMContentLoaded', () => showTab('Placed'));
    </script>
}
