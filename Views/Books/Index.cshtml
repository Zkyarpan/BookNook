@model IEnumerable<BookNook.Models.BookWithDiscountViewModel>
@using Microsoft.AspNetCore.Identity
@inject UserManager<BookNook.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Books";
}

<div class="container mx-auto max-w-7xl px-6 py-8">
    <!-- Actions -->
    <div class="flex justify-between items-center mb-8">
        <h1 class="text-3xl font-bold text-amber-900">Our Book Collection</h1>
        @if (User.Identity.IsAuthenticated)
        {
            var user = await UserManager.GetUserAsync(User);
            if (user != null && await UserManager.IsInRoleAsync(user, "Admin"))
            {
                <a asp-action="Create" class="bg-amber-600 hover:bg-amber-700 text-white text-sm font-semibold py-2 px-4 rounded shadow">
                    + Add New Book
                </a>
            }
            else if (user != null)
            {
                <a asp-controller="Cart" asp-action="Whitelist" class="bg-amber-600 hover:bg-amber-700 text-white text-sm font-semibold py-2 px-4 rounded shadow">
                    View Wishlist
                </a>
            }
        }
    </div>

    <div class="flex flex-col lg:flex-row gap-8">
        <!-- Sidebar Filters -->
        <aside class="lg:w-1/4 bg-white rounded-lg shadow-lg p-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-4">Filter & Sort</h2>
            <form asp-action="Index" method="get" id="filterForm" class="space-y-4">
                <div>
                    <input name="search" value="@ViewBag.Search" placeholder="Search books..."
                           class="w-full border border-gray-300 rounded px-4 py-2 focus:ring-amber-500 focus:border-amber-500" />
                </div>
                <div>
                    <select name="sort" class="w-full border border-gray-300 rounded px-4 py-2 focus:ring-amber-500 focus:border-amber-500">
                        <option value="title" selected="@(ViewBag.Sort=="title")">Sort by Title</option>
                        <option value="author" selected="@(ViewBag.Sort=="author")">Sort by Author</option>
                        <option value="price" selected="@(ViewBag.Sort=="price")">Sort by Price</option>
                        <option value="publicationdate" selected="@(ViewBag.Sort=="publicationdate")">Sort by Newest</option>
                    </select>
                </div>
                <div class="grid grid-cols-2 gap-2">
                    <input name="minPrice" value="@ViewBag.MinPrice" type="number" step="0.01" placeholder="Min $"
                           class="border border-gray-300 rounded px-3 py-2 focus:ring-amber-500 focus:border-amber-500" />
                    <input name="maxPrice" value="@ViewBag.MaxPrice" type="number" step="0.01" placeholder="Max $"
                           class="border border-gray-300 rounded px-3 py-2 focus:ring-amber-500 focus:border-amber-500" />
                </div>
                <button type="submit" class="w-full bg-amber-600 hover:bg-amber-700 text-white py-2 rounded font-semibold">Apply Filters</button>
                <button type="button" onclick="resetFilters()" class="w-full bg-gray-200 hover:bg-gray-300 text-gray-700 py-2 rounded font-medium">Reset</button>
            </form>
        </aside>

        <!-- Book Grid -->
        <section class="lg:w-3/4">
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
                @foreach (var item in Model)
                {
                    var b = item.Book;
                    <div class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-200">
                        <div class="relative">
                            @if (!string.IsNullOrEmpty(b.CoverImageUrl))
                            {
                                <img src="@b.CoverImageUrl" alt="@b.Title" class="w-full h-56 object-cover" />
                            }
                            else
                            {
                                <div class="w-full h-56 bg-gray-100 flex items-center justify-center">
                                    <span class="text-gray-400">No Cover</span>
                                </div>
                            }
                            @if (item.OnSaleFlag)
                            {
                                <span class="absolute top-2 right-2 bg-red-600 text-white text-xs font-semibold px-2 py-1 rounded">SALE</span>
                            }
                        </div>
                        <div class="p-4 flex flex-col h-full">
                            <h3 class="text-lg font-semibold text-amber-900 mb-1 line-clamp-2">
                                <a asp-action="Details" asp-route-id="@b.Id" class="hover:underline">@b.Title</a>
                            </h3>
                            <p class="text-sm text-gray-600 mb-2">by @b.Author</p>
                            <div class="mt-auto">
                                @if (item.IsDiscountActive)
                                {
                                    <p class="text-gray-500 text-sm line-through">$@b.Price</p>
                                    <p class="text-amber-600 text-xl font-bold">$@item.DiscountedPrice</p>
                                }
                                else
                                {
                                    <p class="text-gray-800 text-xl font-bold">$@b.Price</p>
                                }
                                <p class="text-xs text-gray-500 mt-1">Stock: <span class="@(b.Quantity>0?"text-green-600":"text-red-600")">@(b.Quantity > 0 ? b.Quantity.ToString() : "Out")</span></p>

                                @* Add to Cart button for customers *@
                                @if (User.Identity.IsAuthenticated)
                                {
                                    var user2 = await UserManager.GetUserAsync(User);
                                    if (user2 != null && !(await UserManager.IsInRoleAsync(user2, "Admin")))
                                    {
                                        <a asp-action="Details" asp-route-id="@b.Id"
                                           class="block mt-4 bg-amber-600 hover:bg-amber-700 text-white text-center py-2 rounded font-medium">View</a>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (ViewBag.TotalPages > 1)
            {
                <nav class="mt-8 flex justify-center">
                    <ul class="inline-flex -space-x-px">
                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            var active = i == ViewBag.CurrentPage;
                            <li>
                                <a asp-action="Index" asp-route-page="@i"
                                   class="px-4 py-2 text-sm font-medium rounded-l-lg border @(active?"bg-amber-600 text-white":"bg-white text-amber-600 hover:bg-amber-100")">
                                    @i
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </section>
    </div>
</div>

@section Scripts {
    <script>
        function resetFilters() {
            window.location = '@Url.Action("Index", "Books")';
        }
    </script>
}
