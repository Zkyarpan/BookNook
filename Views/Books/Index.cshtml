@model IEnumerable<BookHive.Models.BookWithDiscountViewModel>
@using Microsoft.AspNetCore.Identity
@inject UserManager<BookHive.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Books";
}

<div class="container mx-auto px-4 py-6">
    <!-- Admin Create Link -->
    @if (User.Identity.IsAuthenticated)
    {
        var user = await UserManager.GetUserAsync(User);
        if (user != null && await UserManager.IsInRoleAsync(user, "Admin"))
        {
            <div class="text-center mb-4">
                <a asp-action="Create" class="inline-block bg-amber-600 text-white font-medium text-sm py-1.5 px-3 rounded hover:bg-amber-700">Create New Book</a>
            </div>
        }
    }

    <!-- User Navigation Links -->
    @if (User.Identity.IsAuthenticated)
    {
        var user = await UserManager.GetUserAsync(User);
        if (user != null && !(await UserManager.IsInRoleAsync(user, "Admin") || await UserManager.IsInRoleAsync(user, "Staff")))
        {
            <div class="text-center mb-4 flex justify-center gap-4">
                <a asp-controller="Cart" asp-action="Whitelist" class="inline-block bg-amber-600 text-white font-medium text-sm py-1.5 px-3 rounded hover:bg-amber-700">View Whitelist</a>
                
            </div>
        }
    }

    <!-- Category Tabs -->
    <div class="mb-4">
        <ul class="flex justify-center gap-2 flex-wrap">
            <li>
                <a asp-action="Index" asp-route-category="all" asp-route-page="1" class="inline-block px-4 py-2 text-sm font-medium rounded-lg @(ViewBag.Category == "all" ? "bg-amber-600 text-white" : "bg-amber-100 text-amber-800 hover:bg-amber-200")">All Books</a>
            </li>
            <li>
                <a asp-action="Index" asp-route-category="bestsellers" asp-route-page="1" class="inline-block px-4 py-2 text-sm font-medium rounded-lg @(ViewBag.Category == "bestsellers" ? "bg-amber-600 text-white" : "bg-amber-100 text-amber-800 hover:bg-amber-200")">Bestsellers</a>
            </li>
            <li>
                <a asp-action="Index" asp-route-category="awardwinners" asp-route-page="1" class="inline-block px-4 py-2 text-sm font-medium rounded-lg @(ViewBag.Category == "awardwinners" ? "bg-amber-600 text-white" : "bg-amber-100 text-amber-800 hover:bg-amber-200")">Award Winners</a>
            </li>
            <li>
                <a asp-action="Index" asp-route-category="newreleases" asp-route-page="1" class="inline-block px-4 py-2 text-sm font-medium rounded-lg @(ViewBag.Category == "newreleases" ? "bg-amber-600 text-white" : "bg-amber-100 text-amber-800 hover:bg-amber-200")">New Releases</a>
            </li>
            <li>
                <a asp-action="Index" asp-route-category="newarrivals" asp-route-page="1" class="inline-block px-4 py-2 text-sm font-medium rounded-lg @(ViewBag.Category == "newarrivals" ? "bg-amber-600 text-white" : "bg-amber-100 text-amber-800 hover:bg-amber-200")">New Arrivals</a>
            </li>
            <li>
                <a asp-action="Index" asp-route-category="comingsoon" asp-route-page="1" class="inline-block px-4 py-2 text-sm font-medium rounded-lg @(ViewBag.Category == "comingsoon" ? "bg-amber-600 text-white" : "bg-amber-100 text-amber-800 hover:bg-amber-200")">Coming Soon</a>
            </li>
            <li>
                <a asp-action="Index" asp-route-category="deals" asp-route-page="1" class="inline-block px-4 py-2 text-sm font-medium rounded-lg @(ViewBag.Category == "deals" ? "bg-amber-600 text-white" : "bg-amber-100 text-amber-800 hover:bg-amber-200")">Deals</a>
            </li>
        </ul>
    </div>

    <!-- Filter Form -->
    <div class="mb-4">
        <form asp-action="Index" method="get" id="filterForm" class="flex flex-wrap gap-2 justify-center">
            <!-- Search -->
            <div>
                <input type="text" name="search" value="@ViewBag.Search" placeholder="Search by title, ISBN, or description" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500" />
            </div>

            <!-- Sort -->
            <div>
                <select name="sort" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500">
                    <option value="title" selected="@(ViewBag.Sort == "title")">Sort by Title</option>
                    <option value="publicationdate" selected="@(ViewBag.Sort == "publicationdate")">Sort by Publication Date</option>
                    <option value="price" selected="@(ViewBag.Sort == "price")">Sort by Price</option>
                    <option value="popularity" selected="@(ViewBag.Sort == "popularity")">Sort by Popularity</option>
                    <option value="author" selected="@(ViewBag.Sort == "author")">Sort by Author</option>
                </select>
            </div>

            <!-- Author -->
            <div>
                <input type="text" name="author" value="@ViewBag.Author" placeholder="Author" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500" />
            </div>

            <!-- Genre -->
            <div>
                <input type="text" name="genre" value="@ViewBag.Genre" placeholder="Genre" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500" />
            </div>

            <!-- Availability -->
            <div>
                <select name="availability" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500">
                    <option value="all" selected="@(ViewBag.Availability == "all")">All Availability</option>
                    <option value="available" selected="@(ViewBag.Availability == "available")">In Stock</option>
                    <option value="unavailable" selected="@(ViewBag.Availability == "unavailable")">Out of Stock</option>
                </select>
            </div>

            <!-- Physical Library Access -->
            <div>
                <select name="physicalLibraryAccess" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500">
                    <option value="" selected="@(ViewBag.PhysicalLibraryAccess == null)">All Library Access</option>
                    <option value="true" selected="@(ViewBag.PhysicalLibraryAccess == true)">Available in Library</option>
                    <option value="false" selected="@(ViewBag.PhysicalLibraryAccess == false)">Not in Library</option>
                </select>
            </div>

            <!-- Price Range -->
            <div class="flex gap-1">
                <input type="number" name="minPrice" value="@ViewBag.MinPrice" placeholder="Min Price" step="0.01" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500 w-24" />
                <input type="number" name="maxPrice" value="@ViewBag.MaxPrice" placeholder="Max Price" step="0.01" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500 w-24" />
            </div>

            <!-- Minimum Rating -->
            <div>
                <input type="number" name="minRating" value="@ViewBag.MinRating" placeholder="Min Rating (0-5)" step="0.1" min="0" max="5" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500 w-32" />
            </div>

            <!-- Language -->
            <div>
                <input type="text" name="language" value="@ViewBag.Language" placeholder="Language" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500" />
            </div>

            <!-- Format -->
            <div>
                <select name="format" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500">
                    <option value="" selected="@(string.IsNullOrEmpty(ViewBag.Format))">All Formats</option>
                    <option value="paperback" selected="@(ViewBag.Format == "paperback")">Paperback</option>
                    <option value="hardcover" selected="@(ViewBag.Format == "hardcover")">Hardcover</option>
                    <option value="signed" selected="@(ViewBag.Format == "signed")">Signed Edition</option>
                    <option value="limited" selected="@(ViewBag.Format == "limited")">Limited Edition</option>
                    <option value="first" selected="@(ViewBag.Format == "first")">First Edition</option>
                    <option value="collectors" selected="@(ViewBag.Format == "collectors")">Collector's Edition</option>
                    <option value="authors" selected="@(ViewBag.Format == "authors")">Author's Edition</option>
                    <option value="deluxe" selected="@(ViewBag.Format == "deluxe")">Deluxe Edition</option>
                </select>
            </div>

            <!-- Publisher -->
            <div>
                <input type="text" name="publisher" value="@ViewBag.Publisher" placeholder="Publisher" class="p-1.5 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-amber-500" />
            </div>

            <!-- Apply Filters Button -->
            <div>
                <button type="submit" class="inline-block bg-amber-600 text-white font-medium text-sm py-1.5 px-3 rounded hover:bg-amber-700">Apply Filters</button>
            </div>
        </form>
    </div>

    <!-- Book Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-4">
        @foreach (var item in Model)
        {
            var book = item.Book;
            <div class="bg-amber-50 rounded-lg shadow-md p-2 flex flex-col relative">
                @if (item.OnSaleFlag)
                {
                    <span class="absolute top-2 right-2 bg-red-500 text-white text-xs font-semibold px-2 py-1 rounded">On Sale</span>
                }
                <div class="relative">
                    @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                    {
                        <a asp-action="Details" asp-route-id="@book.Id">
                            <img src="@book.CoverImageUrl" alt="@book.Title" class="w-full h-36 object-cover rounded mb-2" />
                        </a>
                    }
                    else
                    {
                        <div class="w-full h-36 bg-gray-200 flex items-center justify-center rounded mb-2">
                            <span class="text-sm">No Image</span>
                        </div>
                    }
                    @if (User.Identity.IsAuthenticated)
                    {
                        var user = await UserManager.GetUserAsync(User);
                        if (user != null && !(await UserManager.IsInRoleAsync(user, "Admin") || await UserManager.IsInRoleAsync(user, "Staff")))
                        {
                            <button class="absolute top-2 right-2 text-gray-500 hover:text-red-500 wishlist-toggle" data-book-id="@book.Id" title="Toggle Wishlist">
                                <svg class="w-6 h-6 fill-current" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path class="heart-outline" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" fill="none" stroke="currentColor" stroke-width="2" />
                                    <path class="heart-filled hidden" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" fill="currentColor" />
                                </svg>
                            </button>
                        }
                    }
                </div>
                <h3 class="text-base font-semibold text-amber-800 mb-1">
                    <a asp-action="Details" asp-route-id="@book.Id">@book.Title</a>
                </h3>
                <p class="text-gray-600 text-sm mb-1">by @book.Author</p>
                @if (item.IsDiscountActive)
                {
                    <p class="text-gray-600 text-sm mb-1">
                        <span class="line-through">Price: $@book.Price</span>
                        <span class="text-green-600 ml-2">Now: $@item.DiscountedPrice</span>
                    </p>
                }
                else
                {
                    <p class="text-gray-600 text-sm mb-1">Price: $@book.Price</p>
                }
                <p class="text-gray-600 text-sm mb-1">
                    @if (book.Quantity > 0)
                    {
                        <span>Qty: @book.Quantity</span>
                    }
                    else
                    {
                        <span class="text-red-600">Out of Stock</span>
                    }
                </p>
                <p class="text-gray-600 text-sm mb-2 flex-grow line-clamp-2">@book.Description</p>
                <p class="text-gray-500 text-xs mb-2">Added: @book.AddedDate.ToString("d MMM yy")</p>
                @if (User.Identity.IsAuthenticated)
                {
                    var user = await UserManager.GetUserAsync(User);
                    if (user != null && await UserManager.IsInRoleAsync(user, "Admin"))
                    {
                        <div class="flex space-x-1">
                            <a asp-action="Edit" asp-route-id="@book.Id" class="inline-block bg-amber-600 text-white font-medium text-xs py-1 px-2 rounded hover:bg-amber-700 text-center flex-1">Edit</a>
                            <a asp-action="Delete" asp-route-id="@book.Id" class="inline-block bg-red-600 text-white font-medium text-xs py-1 px-2 rounded hover:bg-red-700 text-center flex-1">Delete</a>
                        </div>
                    }
                }
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (ViewBag.TotalPages > 1)
    {
        <div class="flex justify-center mt-4">
            <nav aria-label="Page navigation">
                <ul class="inline-flex -space-x-px">
                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <li>
                            <a asp-action="Index"
                               asp-route-page="@i"
                               asp-route-sort="@ViewBag.Sort"
                               asp-route-category="@ViewBag.Category"
                               asp-route-search="@ViewBag.Search"
                               asp-route-author="@ViewBag.Author"
                               asp-route-genre="@ViewBag.Genre"
                               asp-route-availability="@ViewBag.Availability"
                               asp-route-physicalLibraryAccess="@ViewBag.PhysicalLibraryAccess"
                               asp-route-minPrice="@ViewBag.MinPrice"
                               asp-route-maxPrice="@ViewBag.MaxPrice"
                               asp-route-minRating="@ViewBag.MinRating"
                               asp-route-language="@ViewBag.Language"
                               asp-route-format="@ViewBag.Format"
                               asp-route-publisher="@ViewBag.Publisher"
                               class="px-2 py-1 text-sm leading-tight @((i == ViewBag.CurrentPage) ? "bg-amber-600 text-white" : "bg-amber-50 text-amber-600") border border-amber-300 hover:bg-amber-700 hover:text-white rounded">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            // Load initial wishlist status for each book
            $('.wishlist-toggle').each(function() {
                var bookId = $(this).data('book-id');
                var button = $(this);
                $.ajax({
                    url: '@Url.Action("IsInWishlist", "Books")',
                    type: 'GET',
                    data: { bookId: bookId },
                    success: function(response) {
                        if (response.inWishlist) {
                            button.find('.heart-outline').addClass('hidden');
                            button.find('.heart-filled').removeClass('hidden');
                            button.addClass('text-red-500');
                        }
                    },
                    error: function() {
                        console.log('Error checking wishlist status for book ' + bookId);
                    }
                });
            });

            // Handle wishlist toggle
            $('.wishlist-toggle').click(function(e) {
                e.preventDefault();
                var bookId = $(this).data('book-id');
                var button = $(this);
                $.ajax({
                    url: '@Url.Action("ToggleWishlist", "Books")',
                    type: 'POST',
                    data: { id: bookId },
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            if (response.inWishlist) {
                                button.find('.heart-outline').addClass('hidden');
                                button.find('.heart-filled').removeClass('hidden');
                                button.addClass('text-red-500');
                            } else {
                                button.find('.heart-outline').removeClass('hidden');
                                button.find('.heart-filled').addClass('hidden');
                                button.removeClass('text-red-500');
                            }
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        var errorMessage = xhr.responseJSON && xhr.responseJSON.message ? xhr.responseJSON.message : 'An error occurred while toggling the wishlist.';
                        alert(errorMessage);
                    }
                });
            });

            // Auto-submit form on select change
            $('select[name="sort"], select[name="availability"], select[name="format"]').change(function() {
                $('#filterForm').submit();
            });
        });
    </script>
}